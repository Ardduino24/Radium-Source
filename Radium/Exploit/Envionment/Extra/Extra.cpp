#include "Extra.hpp"
#include <Luau/Compiler.h>
#include <cpr/cpr.h>
#include "../../Roblox/Security/Security.hpp"
#include "../../Dependencies/Luau/VM//src/lgc.h"
#include "../../Dependencies/Luau/VM//src/lapi.h"

#undef LoadString // Fuck off Windows API!

#define RegisterFunction(L, Func, Name) lua_pushcclosure(L, Func, Name, 0); \
lua_setglobal(L, Name);

int SetClipboard(lua_State* L)
{
	auto Text = lua_tostring(L, 1);

	if (!OpenClipboard(NULL))
	{
		return 0;
	}

	EmptyClipboard();

	HGLOBAL Glob = GlobalAlloc(GMEM_FIXED, sizeof(Text));

	strcpy_s((char*)Glob, sizeof(Text), Text);

	SetClipboardData(CF_TEXT, Glob);

	CloseClipboard();

	return 0;
}

int MessageBoxFunc(lua_State* L)
{
	auto Contents = lua_tostring(L, 1);
	auto Title = lua_tostring(L, 2);
	auto Flags = lua_tonumber(L, 3);

	auto Result = MessageBoxA(NULL, Contents, Title, Flags);

	lua_pushnumber(L, Result);
	return 1;
}

int SetFpsCap(lua_State* L)
{
	auto FpsInput = lua_tonumber(L, 1);

	Radium::TaskScheduler::SetFpsCap(FpsInput);
	return 0;
}

int IdentifyExecutor(lua_State* L)
{
	lua_pushstring(L, oxorany("Radium DevSploit"));
	lua_pushnumber(L, oxorany(1.0));
	return 1;
}

int GetIdentity(lua_State* L)
{
	lua_pushnumber(L, Radium::Security::GetIdentity(L));
	return 1;
}

int SetIdentity(lua_State* L)
{
	auto Identity = lua_tonumber(L, 1);
	Radium::Security::SetIdentity(L, Identity);
	return 0;
}
void Radium::Environment::Extra::Register(lua_State* L)
{
	RegisterFunction(L, SetClipboard, oxorany("setclipboard"));
	RegisterFunction(L, MessageBoxFunc, oxorany("messagebox"));
	RegisterFunction(L, SetFpsCap, oxorany("setfpscap"));
	RegisterFunction(L, IdentifyExecutor, oxorany("identifyexecutor"));


	RegisterFunction(L, SetIdentity, oxorany("setidentity"));
	RegisterFunction(L, SetIdentity, oxorany("setthreadidentity"));
	RegisterFunction(L, GetIdentity, oxorany("getidentity"));
	RegisterFunction(L, GetIdentity, oxorany("getthreadidentity"));
}